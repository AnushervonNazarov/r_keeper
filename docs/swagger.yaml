basePath: /
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.accessTokenResponse:
    properties:
      access_token:
        type: string
    type: object
  controllers.defaultResponse:
    properties:
      message:
        type: string
    type: object
  models.Menu:
    properties:
      category:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      name:
        type: string
      price:
        type: number
      updatedAt:
        type: string
    type: object
  models.Order:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      table:
        $ref: '#/definitions/models.Table'
      table_id:
        type: integer
      total_amount:
        type: number
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.OrderItem:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      menu_item:
        $ref: '#/definitions/models.Menu'
      menu_item_id:
        type: integer
      order:
        $ref: '#/definitions/models.Order'
      order_id:
        type: integer
      price:
        type: number
      qunatity:
        type: integer
      updatedAt:
        type: string
    type: object
  models.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.SwagMenu:
    properties:
      category:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  models.SwagOrder:
    properties:
      qunatity:
        type: integer
      table:
        type: integer
      user:
        type: integer
    type: object
  models.SwagTable:
    properties:
      capacity:
        type: integer
      id:
        type: integer
      reserved:
        type: boolean
      table_number:
        type: integer
    type: object
  models.SwagUser:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Table:
    properties:
      capacity:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      orders:
        items:
          $ref: '#/definitions/models.Order'
        type: array
      reserved:
        type: boolean
      table_number:
        type: integer
      updatedAt:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_deleated:
        type: boolean
      password:
        type: string
      role:
        description: |-
          Role      Role      `json:"-" gorm:"foreignKey:RoleID;references:ID"`
          RoleID    uint      `json:"-" gorm:"not null"`
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: 'R-Keeper: Restaurant management software.'
  title: R_KEEPER API
  version: "1.0"
paths:
  /api/menus:
    get:
      description: get list of menus
      operationId: get-all-menus
      parameters:
      - description: fill if you need search
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Menu'
            type: array
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Menus
      tags:
      - menus
    post:
      consumes:
      - application/json
      description: create new menu
      operationId: create-menu
      parameters:
      - description: new menu info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Menu
      tags:
      - menus
  /api/menus/{id}:
    delete:
      description: delete menu by ID
      operationId: delete-menu-by-id
      parameters:
      - description: id of the menu
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Menu By ID
      tags:
      - menus
    get:
      description: get menu by ID
      operationId: get-menu-by-id
      parameters:
      - description: id of the order
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Menu'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Menu By ID
      tags:
      - menus
    put:
      consumes:
      - application/json
      description: edit existed menu
      operationId: edit-menu
      parameters:
      - description: id of the order
        in: path
        name: id
        required: true
        type: integer
      - description: menu update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Edit Menu
      tags:
      - menus
  /api/orders:
    get:
      description: get list of orders
      operationId: get-all-orders
      parameters:
      - description: fill if you need search
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SwagOrder'
            type: array
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: create new order
      operationId: create-order
      parameters:
      - description: new order info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Order
      tags:
      - orders
  /api/orders/{id}:
    delete:
      description: delete order by ID
      operationId: delete-order-by-id
      parameters:
      - description: id of the order
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Order By ID
      tags:
      - orders
    get:
      description: get order by ID
      operationId: get-order-by-id
      parameters:
      - description: id of the order
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagOrder'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Order By ID
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: edit existed order
      operationId: edit-order
      parameters:
      - description: id of the order
        in: path
        name: id
        required: true
        type: integer
      - description: order update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Edit Order
      tags:
      - orders
  /api/tables:
    get:
      description: get list of tables
      operationId: get-all-tables
      parameters:
      - description: fill if you need search
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SwagTable'
            type: array
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Tables
      tags:
      - tables
    post:
      consumes:
      - application/json
      description: create new table
      operationId: create-table
      parameters:
      - description: new table info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Table
      tags:
      - tables
  /api/tables/{id}:
    delete:
      description: delete table by ID
      operationId: delete-table-by-id
      parameters:
      - description: id of the table
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Table By ID
      tags:
      - tables
    get:
      description: get table by ID
      operationId: get-table-by-id
      parameters:
      - description: id of the table
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagTable'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Table By ID
      tags:
      - tables
    put:
      consumes:
      - application/json
      description: edit existed table
      operationId: edit-table
      parameters:
      - description: id of the table
        in: path
        name: id
        required: true
        type: integer
      - description: table update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Table'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Edit Table
      tags:
      - tables
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: sign in to account
      operationId: sign-in-to-account
      parameters:
      - description: sign-in info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.accessTokenResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
